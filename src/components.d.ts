/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AlertRaised } from "./components/alert-component-css-variables/alert-component-css-variables";
import { AlertRaised as AlertRaised1 } from "./components/alert-component-events/alert-component-events";
import { AlertRaised as AlertRaised2 } from "./components/alert-component-methods/alert-component-methods";
import { AlertRaised as AlertRaised3 } from "./components/alert-component-shadow/alert-component-shadow";
import { AlertRaised as AlertRaised4 } from "./components/alert-component-styling/alert-component-styling";
import { AlertRaised as AlertRaised5 } from "./components/alert-component-themes/alert-component-themes";
import { AlertRaised as AlertRaised6 } from "./components/alert-component-watch/alert-component-watch";
export namespace Components {
    interface AlertComponentCssVariables {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
        /**
          * Resets the current value to the initial value
         */
        "reset": () => Promise<void>;
    }
    interface AlertComponentEvents {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
    }
    interface AlertComponentLifecycle {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
    }
    interface AlertComponentMethods {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
        /**
          * Resets the current value to the initial value
         */
        "reset": () => Promise<void>;
    }
    interface AlertComponentProps {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
    }
    interface AlertComponentShadow {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
        /**
          * Resets the current value to the initial value
         */
        "reset": () => Promise<void>;
    }
    interface AlertComponentSlots {
        "first": string;
        "last": string;
    }
    interface AlertComponentStart {
    }
    interface AlertComponentState {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
    }
    interface AlertComponentStyling {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
        /**
          * Resets the current value to the initial value
         */
        "reset": () => Promise<void>;
    }
    interface AlertComponentThemes {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
        /**
          * Resets the current value to the initial value
         */
        "reset": () => Promise<void>;
    }
    interface AlertComponentWatch {
        /**
          * The alert value
         */
        "alertValue": number;
        /**
          * The initial value
         */
        "initialValue": number;
    }
}
declare global {
    interface HTMLAlertComponentCssVariablesElement extends Components.AlertComponentCssVariables, HTMLStencilElement {
    }
    var HTMLAlertComponentCssVariablesElement: {
        prototype: HTMLAlertComponentCssVariablesElement;
        new (): HTMLAlertComponentCssVariablesElement;
    };
    interface HTMLAlertComponentEventsElement extends Components.AlertComponentEvents, HTMLStencilElement {
    }
    var HTMLAlertComponentEventsElement: {
        prototype: HTMLAlertComponentEventsElement;
        new (): HTMLAlertComponentEventsElement;
    };
    interface HTMLAlertComponentLifecycleElement extends Components.AlertComponentLifecycle, HTMLStencilElement {
    }
    var HTMLAlertComponentLifecycleElement: {
        prototype: HTMLAlertComponentLifecycleElement;
        new (): HTMLAlertComponentLifecycleElement;
    };
    interface HTMLAlertComponentMethodsElement extends Components.AlertComponentMethods, HTMLStencilElement {
    }
    var HTMLAlertComponentMethodsElement: {
        prototype: HTMLAlertComponentMethodsElement;
        new (): HTMLAlertComponentMethodsElement;
    };
    interface HTMLAlertComponentPropsElement extends Components.AlertComponentProps, HTMLStencilElement {
    }
    var HTMLAlertComponentPropsElement: {
        prototype: HTMLAlertComponentPropsElement;
        new (): HTMLAlertComponentPropsElement;
    };
    interface HTMLAlertComponentShadowElement extends Components.AlertComponentShadow, HTMLStencilElement {
    }
    var HTMLAlertComponentShadowElement: {
        prototype: HTMLAlertComponentShadowElement;
        new (): HTMLAlertComponentShadowElement;
    };
    interface HTMLAlertComponentSlotsElement extends Components.AlertComponentSlots, HTMLStencilElement {
    }
    var HTMLAlertComponentSlotsElement: {
        prototype: HTMLAlertComponentSlotsElement;
        new (): HTMLAlertComponentSlotsElement;
    };
    interface HTMLAlertComponentStartElement extends Components.AlertComponentStart, HTMLStencilElement {
    }
    var HTMLAlertComponentStartElement: {
        prototype: HTMLAlertComponentStartElement;
        new (): HTMLAlertComponentStartElement;
    };
    interface HTMLAlertComponentStateElement extends Components.AlertComponentState, HTMLStencilElement {
    }
    var HTMLAlertComponentStateElement: {
        prototype: HTMLAlertComponentStateElement;
        new (): HTMLAlertComponentStateElement;
    };
    interface HTMLAlertComponentStylingElement extends Components.AlertComponentStyling, HTMLStencilElement {
    }
    var HTMLAlertComponentStylingElement: {
        prototype: HTMLAlertComponentStylingElement;
        new (): HTMLAlertComponentStylingElement;
    };
    interface HTMLAlertComponentThemesElement extends Components.AlertComponentThemes, HTMLStencilElement {
    }
    var HTMLAlertComponentThemesElement: {
        prototype: HTMLAlertComponentThemesElement;
        new (): HTMLAlertComponentThemesElement;
    };
    interface HTMLAlertComponentWatchElement extends Components.AlertComponentWatch, HTMLStencilElement {
    }
    var HTMLAlertComponentWatchElement: {
        prototype: HTMLAlertComponentWatchElement;
        new (): HTMLAlertComponentWatchElement;
    };
    interface HTMLElementTagNameMap {
        "alert-component-css-variables": HTMLAlertComponentCssVariablesElement;
        "alert-component-events": HTMLAlertComponentEventsElement;
        "alert-component-lifecycle": HTMLAlertComponentLifecycleElement;
        "alert-component-methods": HTMLAlertComponentMethodsElement;
        "alert-component-props": HTMLAlertComponentPropsElement;
        "alert-component-shadow": HTMLAlertComponentShadowElement;
        "alert-component-slots": HTMLAlertComponentSlotsElement;
        "alert-component-start": HTMLAlertComponentStartElement;
        "alert-component-state": HTMLAlertComponentStateElement;
        "alert-component-styling": HTMLAlertComponentStylingElement;
        "alert-component-themes": HTMLAlertComponentThemesElement;
        "alert-component-watch": HTMLAlertComponentWatchElement;
    }
}
declare namespace LocalJSX {
    interface AlertComponentCssVariables {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentEvents {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentLifecycle {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
    }
    interface AlertComponentMethods {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentProps {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
    }
    interface AlertComponentShadow {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentSlots {
        "first"?: string;
        "last"?: string;
    }
    interface AlertComponentStart {
    }
    interface AlertComponentState {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
    }
    interface AlertComponentStyling {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentThemes {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface AlertComponentWatch {
        /**
          * The alert value
         */
        "alertValue"?: number;
        /**
          * The initial value
         */
        "initialValue"?: number;
        "onAlertRaised"?: (event: CustomEvent<AlertRaised>) => void;
    }
    interface IntrinsicElements {
        "alert-component-css-variables": AlertComponentCssVariables;
        "alert-component-events": AlertComponentEvents;
        "alert-component-lifecycle": AlertComponentLifecycle;
        "alert-component-methods": AlertComponentMethods;
        "alert-component-props": AlertComponentProps;
        "alert-component-shadow": AlertComponentShadow;
        "alert-component-slots": AlertComponentSlots;
        "alert-component-start": AlertComponentStart;
        "alert-component-state": AlertComponentState;
        "alert-component-styling": AlertComponentStyling;
        "alert-component-themes": AlertComponentThemes;
        "alert-component-watch": AlertComponentWatch;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "alert-component-css-variables": LocalJSX.AlertComponentCssVariables & JSXBase.HTMLAttributes<HTMLAlertComponentCssVariablesElement>;
            "alert-component-events": LocalJSX.AlertComponentEvents & JSXBase.HTMLAttributes<HTMLAlertComponentEventsElement>;
            "alert-component-lifecycle": LocalJSX.AlertComponentLifecycle & JSXBase.HTMLAttributes<HTMLAlertComponentLifecycleElement>;
            "alert-component-methods": LocalJSX.AlertComponentMethods & JSXBase.HTMLAttributes<HTMLAlertComponentMethodsElement>;
            "alert-component-props": LocalJSX.AlertComponentProps & JSXBase.HTMLAttributes<HTMLAlertComponentPropsElement>;
            "alert-component-shadow": LocalJSX.AlertComponentShadow & JSXBase.HTMLAttributes<HTMLAlertComponentShadowElement>;
            "alert-component-slots": LocalJSX.AlertComponentSlots & JSXBase.HTMLAttributes<HTMLAlertComponentSlotsElement>;
            "alert-component-start": LocalJSX.AlertComponentStart & JSXBase.HTMLAttributes<HTMLAlertComponentStartElement>;
            "alert-component-state": LocalJSX.AlertComponentState & JSXBase.HTMLAttributes<HTMLAlertComponentStateElement>;
            "alert-component-styling": LocalJSX.AlertComponentStyling & JSXBase.HTMLAttributes<HTMLAlertComponentStylingElement>;
            "alert-component-themes": LocalJSX.AlertComponentThemes & JSXBase.HTMLAttributes<HTMLAlertComponentThemesElement>;
            "alert-component-watch": LocalJSX.AlertComponentWatch & JSXBase.HTMLAttributes<HTMLAlertComponentWatchElement>;
        }
    }
}
